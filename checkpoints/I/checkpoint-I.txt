#ifdef GL_ES
precision highp float;
#endif

// Aqui declaras tus uniforms (variables externas)
uniform float time;
uniform vec2 resolution;
uniform vec3 spectrum;

uniform sampler2D prevFrame;
uniform sampler2D prevPass;

varying vec3 v_normal;
varying vec2 v_texcoord;

float sdBox( in vec2 p, in vec2 b )
{
    vec2 d = abs(p)-b;
    return length(max(d,vec2(0))) + min(max(d.x,d.y),0.0);
}

float sdPie( in vec2 p, in vec2 c, in float r )
{
    p.x = abs(p.x);
    float l = length(p) - r;
    float m = length(p-c*clamp(dot(p,c),0.0,r)); // c=sin/cos of aperture
    return max(l,m*sign(c.y*p.x-c.x*p.y));
}


// Despues de aqui va el codigo principal:

void main(void)
{
    vec2 uv = -1. + 2. * v_texcoord; // Centrar coordenadas
    uv.x *= resolution.x/resolution.y; // Ajustar resolucion
    uv *= 2.0;
    
    vec3 col = vec3(0.0); // declaramos variable output
    
    float s0 = sin(uv.x*100.0 + time);
    float s1 = sdBox(uv, vec2(0.5, 2.5)* (1.6 +spectrum.x));
    float s2 = sdPie(uv, vec2(0.9, 1.8 + spectrum.y*2.0), .6 + spectrum.x);
    
    s1 = s2 + s1;
    s1 = s0 - s1;
    
    s1 = smoothstep(0.4, 0.43, s1);
    
    vec3 col1 = s1*vec3(0.0, 0.4, 0.3);
    
    col = col1;
    
    gl_FragColor = vec4(col, 1.0);
}